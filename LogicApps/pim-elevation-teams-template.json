{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
            "description": "Key Vaults need to be globally unique."
            }
        },
        "LogicAppName": {
            "defaultValue": "",
            "type": "String"
        },
        "TeamsWebhook": {
            "type": "securestring",
            "metadata": {
              "description": "Teams Webhook"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
              "description": "Location for all resources."
            }
        },
        "Timezone": {
            "type": "string",
            "defaultValue": "AUS Eastern Standard Time",
            "metadata": {
              "description": "Please refer to Timezone full name."
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2023-07-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantid]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantid]",
                        "objectId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('LogicAppName')), '2019-05-01', 'full').identity.principalId]",
                        "permissions": {
                            "certificates": [],
                            "keys": [],
                            "secrets": [
                                "get",
                                "list"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "enablePurgeProtection": true,
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('keyVaultName')]",
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('keyVaultName')]"
                },
                "customParameterValues": {},
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'keyvault')]"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2023-07-01",
            "name": "[concat(parameters('keyVaultName'), '/TeamsWebhook')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('TeamsWebhook')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "For_each_activation_request": {
                            "actions": {
                                "Teams_Notif_PIM_Activation_Request": {
                                    "inputs": {
                                        "body": {
                                            "attachments": [
                                                {
                                                    "content": {
                                                        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                                        "actions": [
                                                            {
                                                                "title": "Open in Intune",
                                                                "type": "Action.OpenUrl",
                                                                "url": "https://portal.azure.com/#view/Microsoft_Azure_PIMCommon/ApproveRequestMenuBlade/~/@{if(equals(items('For_each_activation_request')?['category'], 'ResourceManagement'), 'azurerbac', if(equals(items('For_each_activation_request')?['category'], 'RoleManagement'), 'aadmigratedroles', if(equals(items('For_each_activation_request')?['category'], 'GroupManagement'), 'aadgroup', '')))}"
                                                            }
                                                        ],
                                                        "body": [
                                                            {
                                                                "id": "acTitle",
                                                                "size": "large",
                                                                "text": "@{if(equals(items('For_each_activation_request')?['category'], 'ResourceManagement'), 'New PIM elevation request for Azure resources', if(equals(items('For_each_activation_request')?['category'], 'RoleManagement'), 'New PIM elevation request for Microsoft Entra Roles', if(equals(items('For_each_activation_request')?['category'], 'GroupManagement'), 'New PIM elevation request for Groups', '')))}",
                                                                "type": "TextBlock",
                                                                "weight": "bolder",
                                                                "wrap": true
                                                            },
                                                            {
                                                                "facts": [
                                                                    {
                                                                        "title": "*User:*",
                                                                        "value": "@{items('For_each_activation_request')?['initiatedBy']?['user']?['userPrincipalName']}"
                                                                    },
                                                                    {
                                                                        "title": "@{if(equals(items('For_each_activation_request')?['category'], 'ResourceManagement'), 'Azure Role', if(equals(items('For_each_activation_request')?['category'], 'RoleManagement'), 'Entra Role', if(equals(items('For_each_activation_request')?['category'], 'GroupManagement'), 'Membership Type', '')))}:",
                                                                        "value": " @{items('For_each_activation_request')?['targetResources'][0]['displayName']}"
                                                                    },
                                                                    {
                                                                        "title": "@{if(equals(items('For_each_activation_request')?['category'], 'ResourceManagement'), 'Subscription', if(equals(items('For_each_activation_request')?['category'], 'RoleManagement'), 'Tenant Name', if(equals(items('For_each_activation_request')?['category'], 'GroupManagement'), 'Group Name', '')))}:",
                                                                        "value": "@{items('For_each_activation_request')?['targetResources'][3]['displayName']}"
                                                                    },
                                                                    {
                                                                        "title": "Justification:",
                                                                        "value": "@{items('For_each_activation_request')?['resultReason']}"
                                                                    },
                                                                    {
                                                                        "title": "Start Time:",
                                                                        "value": "@{formatDateTime(convertTimeZone(if(equals(items('For_each_activation_request')?['category'], 'ResourceManagement'), items('For_each_activation_request')?['additionalDetails'][3]['value'], if(equals(items('For_each_activation_request')?['category'], 'RoleManagement'), items('For_each_activation_request')?['additionalDetails'][3]['value'], if(equals(items('For_each_activation_request')?['category'], 'GroupManagement'), items('For_each_activation_request')?['additionalDetails'][2]['value'], ''))), 'UTC', parameters('timezone')), 'dd/MM/yyyy HH:mm:ss')}"
                                                                    },
                                                                    {
                                                                        "title": "Expiration Time:",
                                                                        "value": "@{formatDateTime(convertTimeZone(if(equals(items('For_each_activation_request')?['category'], 'ResourceManagement'), items('For_each_activation_request')?['additionalDetails'][4]['value'], if(equals(items('For_each_activation_request')?['category'], 'RoleManagement'), items('For_each_activation_request')?['additionalDetails'][4]['value'], if(equals(items('For_each_activation_request')?['category'], 'GroupManagement'), items('For_each_activation_request')?['additionalDetails'][3]['value'], ''))), 'UTC', parameters('timezone')), 'dd/MM/yyyy HH:mm:ss')}"
                                                                    }
                                                                ],
                                                                "id": "acFactSet",
                                                                "type": "FactSet"
                                                            }
                                                        ],
                                                        "msteams": {
                                                            "width": "full"
                                                        },
                                                        "type": "AdaptiveCard",
                                                        "version": "1.0"
                                                    },
                                                    "contentType": "application/vnd.microsoft.card.adaptive",
                                                    "contentUrl": null
                                                }
                                            ],
                                            "type": "message"
                                        },
                                        "headers": {
                                            "Content-type": "application/json"
                                        },
                                        "method": "POST",
                                        "uri": "@body('Get_Teams_Webhook_secret')?['value']"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "foreach": "@body('Parse_JSON_PIM_Activation_Requests')?['value']",
                            "runAfter": {
                                "Parse_JSON_PIM_Activation_Requests": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_Teams_Webhook_secret": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('TeamsWebhook')}/value"
                            },
                            "runAfter": {},
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            },
                            "type": "ApiConnection"
                        },
                        "HTTP_Get_PIM_Activation_Requests": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "queries": {
                                    "$filter": "activityDisplayName eq 'Add member to role approval requested (PIM activation)' and activityDateTime ge @{subtractFromTime(utcNow(),10,'Minute')} and activityDateTime le @{subtractFromTime(utcNow(),5,'Minute')}"
                                },
                                "uri": "https://graph.microsoft.com/beta/auditLogs/directoryAudits"
                            },
                            "runAfter": {
                                "Get_Teams_Webhook_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Parse_JSON_PIM_Activation_Requests": {
                            "inputs": {
                                "content": "@body('HTTP_Get_PIM_Activation_Requests')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "activityDateTime": {
                                                        "type": "string"
                                                    },
                                                    "activityDisplayName": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "additionalDetails": {
                                                        "items": {
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "key",
                                                                "value"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "category": {
                                                        "type": "string"
                                                    },
                                                    "correlationId": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "initiatedBy": {
                                                        "properties": {
                                                            "app": {},
                                                            "user": {
                                                                "properties": {
                                                                    "displayName": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "homeTenantId": {},
                                                                    "homeTenantName": {},
                                                                    "id": {
                                                                        "type": "string"
                                                                    },
                                                                    "ipAddress": {},
                                                                    "userPrincipalName": {
                                                                        "type": "string"
                                                                    },
                                                                    "userType": {}
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "loggedByService": {
                                                        "type": "string"
                                                    },
                                                    "operationType": {
                                                        "type": "string"
                                                    },
                                                    "result": {
                                                        "type": "string"
                                                    },
                                                    "resultReason": {
                                                        "type": "string"
                                                    },
                                                    "targetResources": {
                                                        "items": {
                                                            "properties": {
                                                                "displayName": {
                                                                    "type": [
                                                                        "string",
                                                                        "null"
                                                                    ]
                                                                },
                                                                "groupType": {},
                                                                "id": {
                                                                    "type": "string"
                                                                },
                                                                "modifiedProperties": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "displayName": {
                                                                                "type": [
                                                                                    "string",
                                                                                    "null"
                                                                                ]
                                                                            },
                                                                            "newValue": {
                                                                                "type": "string"
                                                                            },
                                                                            "oldValue": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "displayName",
                                                                            "oldValue",
                                                                            "newValue"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                },
                                                                "userPrincipalName": {}
                                                            },
                                                            "required": [
                                                                "id",
                                                                "displayName",
                                                                "type",
                                                                "userPrincipalName",
                                                                "groupType",
                                                                "modifiedProperties"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "userAgent": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "category",
                                                    "correlationId",
                                                    "result",
                                                    "resultReason",
                                                    "activityDisplayName",
                                                    "activityDateTime",
                                                    "loggedByService",
                                                    "operationType",
                                                    "userAgent",
                                                    "initiatedBy",
                                                    "targetResources",
                                                    "additionalDetails"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "HTTP_Get_PIM_Activation_Requests": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "timezone": {
                            "defaultValue": "AUS Eastern Standard Time",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 5
                            },
                            "type": "Recurrence"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('keyVaultName'))]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'keyvault')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}