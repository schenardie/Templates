{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "keyVaultName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
            "description": "Key Vaults need to be globally unique."
            }
        },
        "LogicAppName": {
            "defaultValue": "",
            "type": "String"
        },
        "TeamsWebhook": {
            "type": "securestring",
            "metadata": {
              "description": "Teams Webhook"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
              "description": "Location for all resources."
            }
        },
        "Timezone": {
            "type": "string",
            "defaultValue": "AUS Eastern Standard Time",
            "metadata": {
              "description": "Please refer to Timezone full name."
            }
        },
        "Recurrence": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
              "description": "Please define how often you would like your logic app to run (in minutes)"
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2023-07-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "[subscription().tenantid]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantid]",
                        "objectId": "[reference(resourceId('Microsoft.Logic/workflows', parameters('LogicAppName')), '2019-05-01', 'full').identity.principalId]",
                        "permissions": {
                            "certificates": [],
                            "keys": [],
                            "secrets": [
                                "get",
                                "list"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "enablePurgeProtection": true,
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('keyVaultName')]",
            "location": "[parameters('location')]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('keyVaultName')]",
                "parameterValueType": "Alternative",
                "alternativeParameterValues": {
                    "vaultName": "[parameters('keyVaultName')]"
                },
                "customParameterValues": {},
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'keyvault')]"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2023-07-01",
            "name": "[concat(parameters('keyVaultName'), '/TeamsWebhook')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
            ],
            "properties": {
                "value": "[parameters('TeamsWebhook')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Disabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "recurrence": {
                            "defaultValue": 5,
                            "type": "Int"
                        },
                        "timezone": {
                            "defaultValue": "[parameters('Timezone')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": "@parameters('recurrence')"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Minute",
                                "interval": "@parameters('recurrence')"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each_elevation_request": {
                            "actions": {
                                "Teams_Notif_EPM_Elevation_Request": {
                                    "inputs": {
                                        "body": {
                                            "attachments": [
                                                {
                                                    "content": {
                                                        "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                                        "actions": [
                                                            {
                                                                "title": "More Info",
                                                                "type": "Action.OpenUrl",
                                                                "url": "https://intune.microsoft.com/#view/Microsoft_Intune_Workflows/SecurityManagementMenu/~/epm"
                                                            }
                                                        ],
                                                        "body": [
                                                            {
                                                                "id": "acTitle",
                                                                "size": "large",
                                                                "text": "New EPM elevation request",
                                                                "type": "TextBlock",
                                                                "weight": "bolder",
                                                                "wrap": true
                                                            },
                                                            {
                                                                "facts": [
                                                                    {
                                                                        "title": "User:",
                                                                        "value": "@{items('For_each_elevation_request')?['requestedByUserPrincipalName']}"
                                                                    },
                                                                    {
                                                                        "title": "Request Justification:",
                                                                        "value": "@{items('For_each_elevation_request')?['requestJustification']}"
                                                                    },
                                                                    {
                                                                        "title": "File Name:",
                                                                        "value": "@{items('For_each_elevation_request')?['applicationDetail']?['fileName']}"
                                                                    },
                                                                    {
                                                                        "title": "Publisher:",
                                                                        "value": "@{items('For_each_elevation_request')?['applicationDetail']?['publisherName']}"
                                                                    },
                                                                    {
                                                                        "title": "Request creation:",
                                                                        "value": "@{formatDateTime(convertTimeZone(items('For_each_elevation_request')?['requestCreatedDateTime'], 'UTC', parameters('timezone')), 'dd/MM/yyyy HH:mm:ss')}"
                                                                    },
                                                                    {
                                                                        "title": "Request expiration:",
                                                                        "value": "@{formatDateTime(convertTimeZone(items('For_each_elevation_request')?['requestExpiryDateTime'], 'UTC', parameters('timezone')), 'dd/MM/yyyy HH:mm:ss')}"
                                                                    }
                                                                ],
                                                                "id": "acFactSet",
                                                                "type": "FactSet"
                                                            },
                                                            {
                                                                "text": "Hash: @{items('For_each_elevation_request')?['applicationDetail']?['fileHash']}",
                                                                "type": "TextBlock",
                                                                "wrap": false
                                                            }
                                                        ],
                                                        "msteams": {
                                                            "width": "full"
                                                        },
                                                        "type": "AdaptiveCard",
                                                        "version": "1.0"
                                                    },
                                                    "contentType": "application/vnd.microsoft.card.adaptive",
                                                    "contentUrl": null
                                                }
                                            ],
                                            "type": "message"
                                        },
                                        "headers": {
                                            "Content-type": "application/json"
                                        },
                                        "method": "POST",
                                        "uri": "@body('Get_Teams_Webhook_secret')?['value']"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "foreach": "@body('Parse_JSON_EPM_Elevation_Requests')?['value']",
                            "runAfter": {
                                "Parse_JSON_EPM_Elevation_Requests": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_Teams_Webhook_secret": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('TeamsWebhook')}/value"
                            },
                            "runAfter": {},
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            },
                            "type": "ApiConnection"
                        },
                        "HTTP_Get_EPM_Elevation_Requests": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "type": "ManagedServiceIdentity"
                                },
                                "method": "GET",
                                "queries": {
                                    "$filter": "status eq 'pending' and requestCreatedDateTime gt @{formatDateTime(subtractFromTime(utcNow(),int(parameters('recurrence')),'Minute'),'yyyy-MM-ddTHH:mm:ssZ')}"
                                },
                                "uri": "https://graph.microsoft.com/beta/deviceManagement/elevationRequests"
                            },
                            "runAfter": {
                                "Get_Teams_Webhook_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Parse_JSON_EPM_Elevation_Requests": {
                            "inputs": {
                                "content": "@body('HTTP_Get_EPM_Elevation_Requests')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "applicationDetail": {
                                                        "properties": {
                                                            "fileDescription": {},
                                                            "fileHash": {
                                                                "type": "string"
                                                            },
                                                            "fileName": {
                                                                "type": "string"
                                                            },
                                                            "filePath": {
                                                                "type": "string"
                                                            },
                                                            "productInternalName": {},
                                                            "productName": {
                                                                "type": "string"
                                                            },
                                                            "productVersion": {
                                                                "type": "string"
                                                            },
                                                            "publisherCert": {
                                                                "type": "string"
                                                            },
                                                            "publisherName": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "deviceName": {},
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "requestCreatedDateTime": {
                                                        "type": "string"
                                                    },
                                                    "requestExpiryDateTime": {
                                                        "type": "string"
                                                    },
                                                    "requestJustification": {
                                                        "type": "string"
                                                    },
                                                    "requestLastModifiedDateTime": {
                                                        "type": "string"
                                                    },
                                                    "requestedByUserId": {
                                                        "type": "string"
                                                    },
                                                    "requestedByUserPrincipalName": {
                                                        "type": "string"
                                                    },
                                                    "requestedOnDeviceId": {
                                                        "type": "string"
                                                    },
                                                    "reviewCompletedByUserId": {
                                                        "type": "string"
                                                    },
                                                    "reviewCompletedByUserPrincipalName": {},
                                                    "reviewCompletedDateTime": {},
                                                    "reviewerJustification": {},
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "requestedByUserId",
                                                    "requestedOnDeviceId",
                                                    "requestedByUserPrincipalName",
                                                    "deviceName",
                                                    "requestCreatedDateTime",
                                                    "requestLastModifiedDateTime",
                                                    "requestJustification",
                                                    "status",
                                                    "reviewCompletedByUserId",
                                                    "reviewCompletedByUserPrincipalName",
                                                    "reviewCompletedDateTime",
                                                    "requestExpiryDateTime",
                                                    "reviewerJustification",
                                                    "applicationDetail"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "HTTP_Get_EPM_Elevation_Requests": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "keyvault": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('keyVaultName'))]",
                                "connectionName": "keyvault",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('location'), 'keyvault')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}